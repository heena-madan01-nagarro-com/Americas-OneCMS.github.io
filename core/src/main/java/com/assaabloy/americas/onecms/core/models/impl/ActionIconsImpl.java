/* * *********************************************************************** * ASSA ABLOY Americas CONFIDENTIAL * ___________________ * * Copyright 2021 ASSA ABLOY Americas. * All Rights Reserved. * * NOTICE:  All information contained herein is, and remains the property * of ASSA ABLOY Americas and its suppliers, if any. The intellectual and * technical concepts contained herein are proprietary to ASSA ABLOY Americas * and its suppliers and are protected by trade secret or copyright law. * Dissemination of this information or reproduction of this material * is strictly forbidden unless prior written permission is obtained * from ASSA ABLOY Americas. * *********************************************************************** */package com.assaabloy.americas.onecms.core.models.impl;import com.adobe.cq.export.json.ComponentExporter;import com.adobe.cq.export.json.ExporterConstants;import com.assaabloy.americas.onecms.core.models.ActionIcons;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonProperty;import org.apache.commons.lang3.StringUtils;import org.apache.sling.api.SlingHttpServletRequest;import org.apache.sling.api.resource.Resource;import org.apache.sling.models.annotations.Exporter;import org.apache.sling.models.annotations.Model;import org.apache.sling.models.annotations.injectorspecific.InjectionStrategy;import org.apache.sling.models.annotations.injectorspecific.SlingObject;import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;@Model(adaptables = {    SlingHttpServletRequest.class}, adapters = {    ActionIcons.class,    ComponentExporter.class})@Exporter(name = ExporterConstants.SLING_MODEL_EXPORTER_NAME, extensions = ExporterConstants.SLING_MODEL_EXTENSION)public class ActionIconsImpl    implements ActionIcons{    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String iconUrl;    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String iconAltText;    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String iconTooltipText;    @SlingObject    private Resource resource;        private String iconElement =StringUtils.EMPTY;    private String renderAs = "image";    @Override    public String getIconUrl() {        return iconUrl;    }    @Override    @JsonProperty(value = "altText")    public String getIconAltText() {        return iconAltText;    }    @Override    @JsonProperty(value = "tooltipText")    public String getIconTooltipText() {        return iconTooltipText;    }    @Override    @JsonIgnore    public String getExportedType() {        return resource.getResourceType();    }    public String getIconElement() {        return iconElement;    }    public String getRenderAs() {        return renderAs;    }}