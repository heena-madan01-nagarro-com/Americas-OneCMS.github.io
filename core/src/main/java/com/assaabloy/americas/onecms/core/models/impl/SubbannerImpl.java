/* * *********************************************************************** * Americas Sites Project CONFIDENTIAL * ___________________ * * Copyright 2021 Americas Sites Project. * All Rights Reserved. * * NOTICE:  All information contained herein is, and remains the property * of Americas Sites Project and its suppliers, if any. The intellectual and * technical concepts contained herein are proprietary to Americas Sites Project * and its suppliers and are protected by trade secret or copyright law. * Dissemination of this information or reproduction of this material * is strictly forbidden unless prior written permission is obtained * from Americas Sites Project. * *********************************************************************** */package com.assaabloy.americas.onecms.core.models.impl;import java.util.Collections;import java.util.List;import com.adobe.acs.commons.models.injectors.annotation.ChildResourceFromRequest;import com.adobe.cq.export.json.ComponentExporter;import com.adobe.cq.export.json.ExporterConstants;import com.adobe.cq.wcm.core.components.models.Image;import com.assaabloy.americas.onecms.core.models.CarouselModel;import com.assaabloy.americas.onecms.core.models.SubBannerCta;import com.assaabloy.americas.onecms.core.models.Subbanner;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonProperty;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.ObjectMapper;import javax.annotation.PostConstruct;import org.apache.commons.lang3.StringUtils;import org.apache.sling.api.SlingHttpServletRequest;import org.apache.sling.api.resource.Resource;import org.apache.sling.models.annotations.Exporter;import org.apache.sling.models.annotations.Model;import org.apache.sling.models.annotations.injectorspecific.InjectionStrategy;import org.apache.sling.models.annotations.injectorspecific.SlingObject;import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;import org.slf4j.Logger;import org.slf4j.LoggerFactory;@Model(adaptables = {    SlingHttpServletRequest.class}, adapters = {    Subbanner.class,    ComponentExporter.class}, resourceType = "onecms/components/content/subbanner")@Exporter(name = ExporterConstants.SLING_MODEL_EXPORTER_NAME, extensions = ExporterConstants.SLING_MODEL_EXTENSION)public class SubbannerImpl        implements Subbanner {    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String title;    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String description;    @ChildResourceFromRequest(injectionStrategy = InjectionStrategy.OPTIONAL)    private Image imageUrl;    @ValueMapValue(injectionStrategy = InjectionStrategy.OPTIONAL)    private String imageAlignment;    @ChildResourceFromRequest(injectionStrategy = InjectionStrategy.OPTIONAL)    private List<SubBannerCta> cta;    @SlingObject    private Resource resource;    private String jsonData;    private String imageSrc = StringUtils.EMPTY;    private final Logger logger = LoggerFactory.getLogger(CarouselModel.class);    @PostConstruct    protected void init() {        logger.info("Starting init method of Subbanner");        if (null != imageUrl) {            imageSrc = imageUrl.getFileReference();        }        ObjectMapper objectMapper = new ObjectMapper();        try {            jsonData = objectMapper.writeValueAsString(this);        } catch (JsonProcessingException ex) {            logger.error("Error in parsing JSON Data for Subbanner component {}", ex.getMessage());        }        logger.info("Exiting init method of Subbanner");    }    @Override    public String getTitle() {        return title;    }    @Override    public String getDescription() {        return description;    }    @Override    @JsonProperty("imageUrl")    public String getImageSrc() {        return imageSrc;    }    @Override    public String getImageAlignment() {        return imageAlignment;    }    @Override    public List<SubBannerCta> getCta() {        return cta != null ? Collections.unmodifiableList(cta) : null;    }    @Override    public String getExportedType() {        return resource.getResourceType();    }    @JsonIgnore    public String getJsonData() {        return jsonData;    }}